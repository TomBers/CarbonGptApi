---
components:
  responses: {}
  schemas:
    Carbon Intensity:
      description: A forecast of the carbon intensity of the grid
      items:
        properties:
          from:
            description: Start of period timestamp
            format: date-time
            type: string
          intensity:
            description: The intensity of the grid
            properties:
              actual:
                description: Actual intensity
                type: integer
              forecast:
                description: Forecast intensity
                type: integer
              index:
                description: Description of intensity
                type: string
            type: object
          to:
            description: End of period timestamp
            format: date-time
            type: string
        type: object
      title: Carbon Intensity
      type: array
      x-struct: Elixir.CarbonGptApiWeb.Schemas.CarbonIntensity
    Carbon Intensity Factors:
      description: The factors used to calculate the carbon intensity of the grid
      items:
        properties:
          Biomass:
            description: Biomass
            type: integer
          Coal:
            description: Coal
            type: integer
          Dutch Imports:
            description: Dutch Imports
            type: integer
          French Imports:
            description: French Imports
            type: integer
          Gas (Combined Cycle):
            description: Gas (Combined Cycle)
            type: integer
          Gas (Open Cycle):
            description: Gas (Open Cycle)
            type: integer
          Hydro:
            description: Hydro
            type: integer
          Irish Imports:
            description: Irish Imports
            type: integer
          Nuclear:
            description: Nuclear
            type: integer
          Oil:
            description: Oil
            type: integer
          Other:
            description: Other
            type: integer
          Pumped Storage:
            description: Pumped Storage
            type: integer
          Solar:
            description: Solar
            type: integer
          Wind:
            description: Wind
            type: integer
        type: object
      title: Carbon Intensity Factors
      type: array
      x-struct: Elixir.CarbonGptApiWeb.Schemas.Factors
    Carbon Intensity Statistics:
      description: Statistics on carbon intensity of the grid
      items:
        properties:
          from:
            description: Start of period timestamp
            format: date-time
            type: string
          intensity:
            description: The intensity of the grid
            properties:
              average:
                description: The average Carbon Intensity for the datetime range in units gCO2/kWh. Future periods use forecast data. Past data uses actual data.
                type: integer
              index:
                description: The index is a measure of the Carbon Intensity represented on a scale between 'very low', 'low', 'moderate', 'high', 'very high'.
                type: string
              max:
                description: The maximum Carbon Intensity for the datetime range in units gCO2/kWh. Future periods use forecast data. Past data uses actual data.
                type: integer
              min:
                description: The minimum Carbon Intensity for the datetime range in units gCO2/kWh. Future periods use forecast data. Past data uses actual data.
                type: integer
            type: object
          to:
            description: End of period timestamp
            format: date-time
            type: string
        type: object
      title: Carbon Intensity Statistics
      type: array
      x-struct: Elixir.CarbonGptApiWeb.Schemas.Statistics
    Generation percentage:
      description: Breakdown of carbon intensity of the grid
      items:
        properties:
          from:
            description: Start of period timestamp
            format: date-time
            type: string
          generationmix:
            description: Fuel mix of the grid
            properties:
              fuel:
                description: Name of the fuel
                type: string
              perc:
                description: Fuel percentage
                type: number
            type: object
          to:
            description: End of period timestamp
            format: date-time
            type: string
        type: object
      title: Generation percentage
      type: array
      x-struct: Elixir.CarbonGptApiWeb.Schemas.Generation
info:
  title: Carbon GPT API
  version: '1.0'
openapi: 3.0.0
paths:
  /api/carbon_intensity:
    get:
      callbacks: {}
      operationId: CarbonGptApiWeb.CarbonController.get_current_carbon_intensity
      parameters: []
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Carbon Intensity'
          description: Carbon intensity response
      summary: Get Carbon Intensity data for current half hour
      tags: []
  /api/carbon_intensity/between/{from}/{to}:
    get:
      callbacks: {}
      operationId: CarbonGptApiWeb.CarbonController.get_intensity_between_datetimes
      parameters:
        - description: Start of period timestamp
          example: 2024-01-01T00:00Z
          in: path
          name: from
          required: true
          schema:
            type: string
        - description: End of period timestamp
          example: 2024-01-01T00:30Z
          in: path
          name: to
          required: true
          schema:
            type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Carbon Intensity'
          description: Carbon intensity response
      summary: Get Carbon Intensity data between two datetimes
      tags: []
  /api/carbon_intensity/date/{date}:
    get:
      callbacks: {}
      operationId: CarbonGptApiWeb.CarbonController.get_intensity_for_date
      parameters:
        - description: Date to get intensity for
          example: 2021-01-01
          in: path
          name: date
          required: true
          schema:
            type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Carbon Intensity'
          description: Carbon intensity response
      summary: Get Carbon Intensity data for a given date
      tags: []
  /api/carbon_intensity/today:
    get:
      callbacks: {}
      operationId: CarbonGptApiWeb.CarbonController.get_todays_carbon_intensity
      parameters: []
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Carbon Intensity'
          description: Carbon intensity response
      summary: Get Carbon Intensity data for today
      tags: []
  /api/factors:
    get:
      callbacks: {}
      operationId: CarbonGptApiWeb.CarbonController.get_intensity_factors
      parameters: []
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Carbon Intensity Factors'
          description: Carbon intensity factors response
      summary: Get Carbon Intensity factors
      tags: []
  /api/generation/between/{from}/{to}:
    get:
      callbacks: {}
      operationId: CarbonGptApiWeb.CarbonController.get_generation_between_datetimes
      parameters:
        - description: Start of period timestamp
          example: 2024-01-01T00:00Z
          in: path
          name: from
          required: true
          schema:
            type: string
        - description: End of period timestamp
          example: 2024-01-01T00:30Z
          in: path
          name: to
          required: true
          schema:
            type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Generation percentage'
          description: Carbon intensity generation
      summary: Get Carbon Intensity generation between two datetimes
      tags: []
  /api/stats/between/{from}/{to}:
    get:
      callbacks: {}
      operationId: CarbonGptApiWeb.CarbonController.get_stats_between_datetimes
      parameters:
        - description: Start of period timestamp
          example: 2024-01-01T00:00Z
          in: path
          name: from
          required: true
          schema:
            type: string
        - description: End of period timestamp
          example: 2024-01-01T00:30Z
          in: path
          name: to
          required: true
          schema:
            type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Carbon Intensity Statistics'
          description: Carbon intensity statistics
      summary: Get Carbon Intensity statistics between two datetimes
      tags: []
security: []
servers:
  - url: http://localhost:4000
    variables: {}
tags: []
