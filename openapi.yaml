---
components:
  responses: {}
  schemas:
    User:
      description: A user of the app
      example:
        birthday: 1970-01-01T12:34:55Z
        email: joe@gmail.com
        id: 123
        inserted_at: 2017-09-12T12:34:55Z
        name: Joe User
        updated_at: 2017-09-13T10:11:12Z
      properties:
        birthday:
          description: Birth date
          format: date
          type: string
        email:
          description: Email address
          format: email
          type: string
        id:
          description: User ID
          type: integer
        inserted_at:
          description: Creation timestamp
          format: date-time
          type: string
        name:
          description: User name
          pattern: '[a-zA-Z][a-zA-Z0-9_]+'
          type: string
        updated_at:
          description: Update timestamp
          format: date-time
          type: string
      required:
        - name
        - email
      title: User
      type: object
      x-struct: Elixir.CarbonGptApiWeb.Schemas.User
    UserResponse:
      description: Response schema for single user
      example:
        data:
          birthday: 1970-01-01T12:34:55Z
          email: joe@gmail.com
          id: 123
          inserted_at: 2017-09-12T12:34:55Z
          name: Joe User
          updated_at: 2017-09-13T10:11:12Z
      properties:
        data:
          $ref: '#/components/schemas/User'
      title: UserResponse
      type: object
      x-struct: Elixir.CarbonGptApiWeb.Schemas.UserResponse
info:
  title: Carbon GPT API
  version: '1.0'
openapi: 3.0.0
paths:
  /api/users/{user_id}:
    get:
      callbacks: {}
      operationId: CarbonGptApiWeb.UserController.update_user_by_id
      parameters:
        - description: User ID
          example: 1001
          in: path
          name: user_id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: User params
        required: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: User response
      security:
        - {}
        - petstore_auth:
            - write:users
            - read:users
      summary: Update user
      tags:
        - users
security: []
servers:
  - url: http://localhost:4000
    variables: {}
tags: []
